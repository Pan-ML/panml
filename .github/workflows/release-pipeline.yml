name: Publsh to PyPi
on:
  pull_request:
    branches: [main]
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v2
      - name: Use Python3
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip' # cache pip dependencies
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install setuptools wheel twine bump2version
      - name: Bump version number
        env:
          BUMPVERSION_AUTHOR: panmlbot
          BUMPVERSION_EMAIL: teampanml@gmail.com
          BUMPVERSION_TOKEN: ${{ secrets.BOT_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          REPOSITORY_URI="https://${BUMPVERSION_AUTHOR}:${BUMPVERSION_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          BRANCH_NAME=${GITHUB_REF##*/}
          git config --global user.name "${BUMPVERSION_AUTHOR}"
          git config --global user.email "${BUMPVERSION_EMAIL}"
          COMMIT_MSG=$(git log -1 --pretty=%B|sed 's/\r$//g'|sed -e ':a' -e 'N' -e '$!ba')

          if [[ $COMMIT_MSG == *'(major)'* ]]; then
            VERSION='major'
          elif [[ $COMMIT_MSG == *'(minor)'* ]]; then
            VERSION='minor'
          else
            VERSION='patch'
          fi

          bump2version --config-file .bumpversion.cfg "${VERSION}"
          git push "${REPOSITORY_URI}" HEAD:${BRANCH_NAME}
          git push "${REPOSITORY_URI}" --tags HEAD:${BRANCH_NAME}
          git pull

          # Get the value of latest tag that was just pushed
          NEW_TAG="$(git describe)"

          # Construct post JSON for publishing release

          POST_DATA=$(jq -n \
            --arg nt "$NEW_TAG" \
            --arg cm "$COMMIT_MSG" \
            '{ tag_name: $nt, name: ("Release " + $nt), draft: false, prerelease: false, body: $cm}')

          echo "Submitting release for ${NEW_TAG}"

          curl \
            -X POST \
            -H "Authorization: token ${BUMPVERSION_TOKEN}" \
            -d "${POST_DATA}" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases"

      - name: Build
        run: |
          python setup.py sdist bdist_wheel
      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        env:
          name: pypi
          url: https://pypi.org/project/panml/
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
